import subprocess, re, os
from os import scandir
import base64




#!--This method is the most current iteration of the disassembly script;
# The first iteration was written by Kenneth Witzenman;
#Subsequent versions were written by Cameron Pierce--!

#Class that handles file manipulation 
class File:
    UPLOAD_DIRECTORY = "malwareGUI/app_uploaded_files/"
    OUTPUT_DIRECTORY = "malwareGUI/outputFiles/"

    
    # Get the opcodes for all files in a directory
    def dumpOpCodes(filename, writePath, file_path = UPLOAD_DIRECTORY): 
        # Loop through each file in listOfFiles
        
        try:
            writedir = writePath
            
            # Get the file format
            fileFormat = subprocess.run(["objdump", "-f", file_path + filename], capture_output=True)
            #if fileFormat != "pei-x86-64" or "pe-x86-64":
                #return "Unsupported file architecture format"

            try:
                # Filter out only the architecture type
                fileFormat = re.search("file format (.+)", fileFormat.stdout.decode("utf-8")).group(1).strip()
            except:
                # objdump returns "file format not recognized"
                pass

                

            # Skip dumping hex if file already exists
            if os.path.exists(writedir):
                return "File already disassembled"
                

            # Dissasemble all headers in file without outputting addresses
            opCodes = subprocess.run(["objdump", "-M", "intel", "-b", fileFormat, "-s",  "-d", file_path + filename], capture_output=True).stdout.decode("utf-8")


            # Filter out only hex using regex
            hexOnly = re.findall("\t(\w{2}(?: \w{2})*).+\t", opCodes)
            opCodes = ''
            # Find longest length instruction
            # maxLen = len(max(hexOnly, key=len))

            maxLen = 23
            
            # Loop through each intruction
            for op in hexOnly:
                int_opcode = ''
                # Pad each instruction to have same length
                while len(op) < maxLen:
                    op += ' 00'
                    
                # Loop through each byte in instruction
                for byte in op.split(' '):
                    # Convert byte to int
                    int_opcode += str(int(byte, base=16)) + ' '
                opCodes += int_opcode.strip() + '\n'


            # Write opCodes to file   
            with open(writedir, "w") as out:
                out.write(opCodes)
                   
                
            out.close()

            return f"{filename} disassembled"
            

        except Exception as e:
            print(e)
                


#!--This method was written by Cameron Pierce--!
    def getFilesInDirectory(path):
        #return the filename and path to file 
        files = []
        try:
            files = [(f.name) for f in scandir(path)]
        
        except Exception:
            pass

        return files


    
#!--This method was written by Justin Truong--!
    def saveFile(name, content, directory):
        #Saves file within uploaded files folder
        data = content.encode("utf8").split(b";base64,")[1]
        with open(os.path.join(directory, name), "wb") as out:
            out.write(base64.decodebytes(data))
        
        out.close()
